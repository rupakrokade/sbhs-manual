%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox:  0 0 300 212
%%
%%Scilab Postscript File (Copyright 1995-2005 J.Ph Chancelier Enpc/cermics)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	arsize dx mul norme div /dx1 exch def 
	arsize dy mul norme div /dy1 exch def 
% 	2 following lines modified (correction bug 607 (bruno 18 nov 2004)) 
	/depx tipx def 
	/depy tipy def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat
        
        % don't fill if the color is out of colormap
        % that's the disctinction between drawArc and FillArc
	glev 1 WhiteLev add le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica exch definefont pop

/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold exch definefont pop

/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-BoldOblique exch definefont pop

/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Oblique exch definefont pop

% used when extracting Latex from scilab generated text
%Latex:% MySetFigFont
%Latex:\begingroup\makeatletter\ifx\MySetFigFont\undefined%
%Latex:\gdef\MySetFigFont#1#2#3#4#5{%
%Latex:  \reset@font\fontsize{#1}{#2pt}%
%Latex:  \fontfamily{#3}\fontseries{#4}\fontshape{#5}%
%Latex:  \selectfont}%
%Latex:\fi\endgroup%
%Latex:% myput 
%Latex:\ifx\myput\undefined%
%Latex:\long\def\myput#1#2#3#4{\put(#1,#2){\makebox(0,0)[lb]{\smash{{\MySetFigFont{#3}{#3}{\familydefault}{\mddefault}{\updefault}{\color[rgb]{0,0,0}#4}}}}}}
%Latex:\fi%

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%scipos_w=3000
%scipos_h=2120
% Dessin en bas a gauche de taille 3000,2120
[0.5 10 div 0 0 0.5 10 div neg  0 2120 10 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6000 4240] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/WhiteLev 31 def
/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%Latex:\setlength{\unitlength}{0.05pt}
%Latex:\begin{picture}(6000,4240)(200,0)
/background 33 def PaintBackground
/background 33 def PaintBackground
/background 33 def PaintBackground
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[750 530 750 3710 5250 3710 5250 530 750 530 
] dogrey 
33 Setcolor
/absolu true def
32 Setcolor
[] 0 setdash
32 Setcolor
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
5 Thickness
750 217 4500 1299 setclipzone
-1 -1 200000 200000 setclipzone
[] 0 setdash
32 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[750 217 750 1516 5250 1516 5250 217 750 217 
] dogrey 
33 Setcolor
/absolu true def
32 Setcolor
[] 0 setdash
32 Setcolor
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[750 1516 750 217 
] dogrey 
 (drawsegs) 4 [ 3]
[3000 1516 3000 217 
] dogrey 
 (drawsegs) 4 [ 3]
[5250 1516 5250 217 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1516 750 217 
] dogrey 
 (drawsegs) 4 [ 3]
[1427 1516 1427 217 
] dogrey 
 (drawsegs) 4 [ 3]
[1824 1516 1824 217 
] dogrey 
 (drawsegs) 4 [ 3]
[2105 1516 2105 217 
] dogrey 
 (drawsegs) 4 [ 3]
[2323 1516 2323 217 
] dogrey 
 (drawsegs) 4 [ 3]
[2501 1516 2501 217 
] dogrey 
 (drawsegs) 4 [ 3]
[2651 1516 2651 217 
] dogrey 
 (drawsegs) 4 [ 3]
[2782 1516 2782 217 
] dogrey 
 (drawsegs) 4 [ 3]
[2897 1516 2897 217 
] dogrey 
 (drawsegs) 4 [ 3]
[3000 1516 3000 217 
] dogrey 
 (drawsegs) 4 [ 3]
[3677 1516 3677 217 
] dogrey 
 (drawsegs) 4 [ 3]
[4074 1516 4074 217 
] dogrey 
 (drawsegs) 4 [ 3]
[4355 1516 4355 217 
] dogrey 
 (drawsegs) 4 [ 3]
[4573 1516 4573 217 
] dogrey 
 (drawsegs) 4 [ 3]
[4751 1516 4751 217 
] dogrey 
 (drawsegs) 4 [ 3]
[4901 1516 4901 217 
] dogrey 
 (drawsegs) 4 [ 3]
[5032 1516 5032 217 
] dogrey 
 (drawsegs) 4 [ 3]
[5147 1516 5147 217 
] dogrey 
[] 0 setdash
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[750 1516 5250 1516 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1330 5250 1330 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1144 5250 1144 
] dogrey 
 (drawsegs) 4 [ 3]
[750 959 5250 959 
] dogrey 
 (drawsegs) 4 [ 3]
[750 773 5250 773 
] dogrey 
 (drawsegs) 4 [ 3]
[750 588 5250 588 
] dogrey 
 (drawsegs) 4 [ 3]
[750 402 5250 402 
] dogrey 
 (drawsegs) 4 [ 3]
[750 217 5250 217 
] dogrey 
[] 0 setdash
0 Setcolor
5 Thickness
[] 0 setdash
750 217 4500 1299 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 24 [ 0]
[750 360 1974 427 2105 496 2323 496 2501 520 2651 537 2782 546 2897 547 3000 555 3677 719 
4074 788 4355 828 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
750 217 4500 1299 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 24 [ 0]
[750 475 1974 602 2105 629 2323 680 2501 726 2651 768 2782 806 2897 841 3000 872 3677 1096 
4074 1239 4355 1349 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
(-3) 715 1616 0  0.00 [715 1536 71 79] Show
%Latex:\myput{715}{2624}{4}{-3}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 604 1713 0  0.00 [604 1613 111 99] Show
%Latex:\myput{604}{2527}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1516 750 1541 
] dogrey 
32 Setcolor
32 Setcolor
(-2) 2965 1616 0  0.00 [2965 1536 71 79] Show
%Latex:\myput{2965}{2624}{4}{-2}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 2854 1713 0  0.00 [2854 1613 111 99] Show
%Latex:\myput{2854}{2527}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[3000 1516 3000 1541 
] dogrey 
32 Setcolor
32 Setcolor
(-1) 5215 1616 0  0.00 [5215 1536 71 79] Show
%Latex:\myput{5215}{2624}{4}{-1}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 5104 1713 0  0.00 [5104 1613 111 99] Show
%Latex:\myput{5104}{2527}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[5250 1516 5250 1541 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1516 750 1534 
] dogrey 
 (drawsegs) 4 [ 32]
[1427 1516 1427 1534 
] dogrey 
 (drawsegs) 4 [ 32]
[1824 1516 1824 1534 
] dogrey 
 (drawsegs) 4 [ 32]
[2105 1516 2105 1534 
] dogrey 
 (drawsegs) 4 [ 32]
[2323 1516 2323 1534 
] dogrey 
 (drawsegs) 4 [ 32]
[2501 1516 2501 1534 
] dogrey 
 (drawsegs) 4 [ 32]
[2651 1516 2651 1534 
] dogrey 
 (drawsegs) 4 [ 32]
[2782 1516 2782 1534 
] dogrey 
 (drawsegs) 4 [ 32]
[2897 1516 2897 1534 
] dogrey 
 (drawsegs) 4 [ 32]
[3000 1516 3000 1534 
] dogrey 
 (drawsegs) 4 [ 32]
[3677 1516 3677 1534 
] dogrey 
 (drawsegs) 4 [ 32]
[4074 1516 4074 1534 
] dogrey 
 (drawsegs) 4 [ 32]
[4355 1516 4355 1534 
] dogrey 
 (drawsegs) 4 [ 32]
[4573 1516 4573 1534 
] dogrey 
 (drawsegs) 4 [ 32]
[4751 1516 4751 1534 
] dogrey 
 (drawsegs) 4 [ 32]
[4901 1516 4901 1534 
] dogrey 
 (drawsegs) 4 [ 32]
[5032 1516 5032 1534 
] dogrey 
 (drawsegs) 4 [ 32]
[5147 1516 5147 1534 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-35) 534 1555 0  0.00 [534 1455 144 99] Show
%Latex:\myput{534}{2685}{5}{-35}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1516 690 1516 
] dogrey 
32 Setcolor
32 Setcolor
(-30) 534 1369 0  0.00 [534 1269 144 99] Show
%Latex:\myput{534}{2871}{5}{-30}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1330 690 1330 
] dogrey 
32 Setcolor
32 Setcolor
(-25) 534 1183 0  0.00 [534 1083 144 99] Show
%Latex:\myput{534}{3057}{5}{-25}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1144 690 1144 
] dogrey 
32 Setcolor
32 Setcolor
(-20) 534 998 0  0.00 [534 898 144 99] Show
%Latex:\myput{534}{3242}{5}{-20}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 959 690 959 
] dogrey 
32 Setcolor
32 Setcolor
(-15) 534 812 0  0.00 [534 712 144 99] Show
%Latex:\myput{534}{3428}{5}{-15}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 773 690 773 
] dogrey 
32 Setcolor
32 Setcolor
(-10) 534 627 0  0.00 [534 527 144 99] Show
%Latex:\myput{534}{3613}{5}{-10}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 588 690 588 
] dogrey 
32 Setcolor
32 Setcolor
(-5) 590 441 0  0.00 [590 341 88 99] Show
%Latex:\myput{590}{3799}{5}{-5}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 402 690 402 
] dogrey 
32 Setcolor
32 Setcolor
(0) 623 256 0  0.00 [623 156 55 99] Show
%Latex:\myput{623}{3984}{5}{0}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 217 690 217 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1516 705 1516 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1454 705 1454 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1392 705 1392 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1330 705 1330 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1268 705 1268 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1206 705 1206 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1144 705 1144 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1083 705 1083 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1021 705 1021 
] dogrey 
 (drawsegs) 4 [ 32]
[750 959 705 959 
] dogrey 
 (drawsegs) 4 [ 32]
[750 897 705 897 
] dogrey 
 (drawsegs) 4 [ 32]
[750 835 705 835 
] dogrey 
 (drawsegs) 4 [ 32]
[750 773 705 773 
] dogrey 
 (drawsegs) 4 [ 32]
[750 711 705 711 
] dogrey 
 (drawsegs) 4 [ 32]
[750 650 705 650 
] dogrey 
 (drawsegs) 4 [ 32]
[750 588 705 588 
] dogrey 
 (drawsegs) 4 [ 32]
[750 526 705 526 
] dogrey 
 (drawsegs) 4 [ 32]
[750 464 705 464 
] dogrey 
 (drawsegs) 4 [ 32]
[750 402 705 402 
] dogrey 
 (drawsegs) 4 [ 32]
[750 340 705 340 
] dogrey 
 (drawsegs) 4 [ 32]
[750 278 705 278 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1516 5250 1516 
] dogrey 
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1516 750 217 
] dogrey 
32 Setcolor
 (drawbox) 4 [ 0]
[750 217 4500 1299 
] dogrey 
32 Setcolor
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Magnitude ) 2752 137 0  0.00 [2752 37 494 99] Show
%Latex:\myput{2752}{4103}{5}{Magnitude }
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
( Hz) 2925 1896 0  0.00 [2925 1796 150 99] Show
%Latex:\myput{2925}{2344}{5}{ Hz}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(db) 508 901 0 270.00 [508 801 111 99] Show
%Latex:\myput{508}{3339}{5}{db}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
5 Thickness
750 2040 4500 1299 setclipzone
-1 -1 200000 200000 setclipzone
[] 0 setdash
32 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[750 2040 750 3339 5250 3339 5250 2040 750 2040 
] dogrey 
33 Setcolor
/absolu true def
32 Setcolor
[] 0 setdash
32 Setcolor
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[750 3339 750 2040 
] dogrey 
 (drawsegs) 4 [ 3]
[3000 3339 3000 2040 
] dogrey 
 (drawsegs) 4 [ 3]
[5250 3339 5250 2040 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3339 750 2040 
] dogrey 
 (drawsegs) 4 [ 3]
[1427 3339 1427 2040 
] dogrey 
 (drawsegs) 4 [ 3]
[1824 3339 1824 2040 
] dogrey 
 (drawsegs) 4 [ 3]
[2105 3339 2105 2040 
] dogrey 
 (drawsegs) 4 [ 3]
[2323 3339 2323 2040 
] dogrey 
 (drawsegs) 4 [ 3]
[2501 3339 2501 2040 
] dogrey 
 (drawsegs) 4 [ 3]
[2651 3339 2651 2040 
] dogrey 
 (drawsegs) 4 [ 3]
[2782 3339 2782 2040 
] dogrey 
 (drawsegs) 4 [ 3]
[2897 3339 2897 2040 
] dogrey 
 (drawsegs) 4 [ 3]
[3000 3339 3000 2040 
] dogrey 
 (drawsegs) 4 [ 3]
[3677 3339 3677 2040 
] dogrey 
 (drawsegs) 4 [ 3]
[4074 3339 4074 2040 
] dogrey 
 (drawsegs) 4 [ 3]
[4355 3339 4355 2040 
] dogrey 
 (drawsegs) 4 [ 3]
[4573 3339 4573 2040 
] dogrey 
 (drawsegs) 4 [ 3]
[4751 3339 4751 2040 
] dogrey 
 (drawsegs) 4 [ 3]
[4901 3339 4901 2040 
] dogrey 
 (drawsegs) 4 [ 3]
[5032 3339 5032 2040 
] dogrey 
 (drawsegs) 4 [ 3]
[5147 3339 5147 2040 
] dogrey 
[] 0 setdash
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[750 3339 5250 3339 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3194 5250 3194 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3050 5250 3050 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2906 5250 2906 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2761 5250 2761 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2617 5250 2617 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2473 5250 2473 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2328 5250 2328 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2184 5250 2184 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2040 5250 2040 
] dogrey 
[] 0 setdash
0 Setcolor
5 Thickness
[] 0 setdash
750 2040 4500 1299 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 24 [ 0]
[750 2222 1974 2249 2105 2279 2323 2338 2501 2476 2651 2549 2782 2601 2897 2671 3000 2689 3677 2975 
4074 3131 4355 3287 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
750 2040 4500 1299 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 24 [ 0]
[750 2183 1974 2424 2105 2454 2323 2502 2501 2539 2651 2568 2782 2593 2897 2613 3000 2631 3677 2745 
4074 2817 4355 2874 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
(-3) 715 3439 0  0.00 [715 3359 71 79] Show
%Latex:\myput{715}{801}{4}{-3}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 604 3536 0  0.00 [604 3436 111 99] Show
%Latex:\myput{604}{704}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3339 750 3364 
] dogrey 
32 Setcolor
32 Setcolor
(-2) 2965 3439 0  0.00 [2965 3359 71 79] Show
%Latex:\myput{2965}{801}{4}{-2}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 2854 3536 0  0.00 [2854 3436 111 99] Show
%Latex:\myput{2854}{704}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[3000 3339 3000 3364 
] dogrey 
32 Setcolor
32 Setcolor
(-1) 5215 3439 0  0.00 [5215 3359 71 79] Show
%Latex:\myput{5215}{801}{4}{-1}
/Helvetica findfont 100 scf mul scalefont setfont
(10) 5104 3536 0  0.00 [5104 3436 111 99] Show
%Latex:\myput{5104}{704}{5}{10}
/Helvetica findfont 80 scf mul scalefont setfont
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[5250 3339 5250 3364 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3339 750 3357 
] dogrey 
 (drawsegs) 4 [ 32]
[1427 3339 1427 3357 
] dogrey 
 (drawsegs) 4 [ 32]
[1824 3339 1824 3357 
] dogrey 
 (drawsegs) 4 [ 32]
[2105 3339 2105 3357 
] dogrey 
 (drawsegs) 4 [ 32]
[2323 3339 2323 3357 
] dogrey 
 (drawsegs) 4 [ 32]
[2501 3339 2501 3357 
] dogrey 
 (drawsegs) 4 [ 32]
[2651 3339 2651 3357 
] dogrey 
 (drawsegs) 4 [ 32]
[2782 3339 2782 3357 
] dogrey 
 (drawsegs) 4 [ 32]
[2897 3339 2897 3357 
] dogrey 
 (drawsegs) 4 [ 32]
[3000 3339 3000 3357 
] dogrey 
 (drawsegs) 4 [ 32]
[3677 3339 3677 3357 
] dogrey 
 (drawsegs) 4 [ 32]
[4074 3339 4074 3357 
] dogrey 
 (drawsegs) 4 [ 32]
[4355 3339 4355 3357 
] dogrey 
 (drawsegs) 4 [ 32]
[4573 3339 4573 3357 
] dogrey 
 (drawsegs) 4 [ 32]
[4751 3339 4751 3357 
] dogrey 
 (drawsegs) 4 [ 32]
[4901 3339 4901 3357 
] dogrey 
 (drawsegs) 4 [ 32]
[5032 3339 5032 3357 
] dogrey 
 (drawsegs) 4 [ 32]
[5147 3339 5147 3357 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-180) 478 3378 0  0.00 [478 3278 200 99] Show
%Latex:\myput{478}{862}{5}{-180}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3339 690 3339 
] dogrey 
32 Setcolor
32 Setcolor
(-160) 478 3233 0  0.00 [478 3133 200 99] Show
%Latex:\myput{478}{1007}{5}{-160}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3194 690 3194 
] dogrey 
32 Setcolor
32 Setcolor
(-140) 478 3089 0  0.00 [478 2989 200 99] Show
%Latex:\myput{478}{1151}{5}{-140}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3050 690 3050 
] dogrey 
32 Setcolor
32 Setcolor
(-120) 478 2945 0  0.00 [478 2845 200 99] Show
%Latex:\myput{478}{1295}{5}{-120}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2906 690 2906 
] dogrey 
32 Setcolor
32 Setcolor
(-100) 478 2800 0  0.00 [478 2700 200 99] Show
%Latex:\myput{478}{1440}{5}{-100}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2761 690 2761 
] dogrey 
32 Setcolor
32 Setcolor
(-80) 534 2656 0  0.00 [534 2556 144 99] Show
%Latex:\myput{534}{1584}{5}{-80}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2617 690 2617 
] dogrey 
32 Setcolor
32 Setcolor
(-60) 534 2512 0  0.00 [534 2412 144 99] Show
%Latex:\myput{534}{1728}{5}{-60}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2473 690 2473 
] dogrey 
32 Setcolor
32 Setcolor
(-40) 534 2367 0  0.00 [534 2267 144 99] Show
%Latex:\myput{534}{1873}{5}{-40}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2328 690 2328 
] dogrey 
32 Setcolor
32 Setcolor
(-20) 534 2223 0  0.00 [534 2123 144 99] Show
%Latex:\myput{534}{2017}{5}{-20}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2184 690 2184 
] dogrey 
32 Setcolor
32 Setcolor
(0) 623 2079 0  0.00 [623 1979 55 99] Show
%Latex:\myput{623}{2161}{5}{0}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2040 690 2040 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3339 705 3339 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3267 705 3267 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3194 705 3194 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3122 705 3122 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3050 705 3050 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2978 705 2978 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2906 705 2906 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2834 705 2834 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2761 705 2761 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2689 705 2689 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2617 705 2617 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2545 705 2545 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2473 705 2473 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2401 705 2401 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2328 705 2328 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2256 705 2256 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2184 705 2184 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2112 705 2112 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3339 5250 3339 
] dogrey 
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3339 750 2040 
] dogrey 
32 Setcolor
 (drawbox) 4 [ 0]
[750 2040 4500 1299 
] dogrey 
32 Setcolor
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Phase ) 2843 1960 0  0.00 [2843 1860 311 99] Show
%Latex:\myput{2843}{2280}{5}{Phase }
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
( Hz) 2925 3719 0  0.00 [2925 3619 150 99] Show
%Latex:\myput{2925}{521}{5}{ Hz}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(degrees) 452 2849 0 270.00 [452 2749 361 99] Show
%Latex:\myput{452}{1391}{5}{degrees}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[750 3699 750 4017 5250 4017 5250 3699 750 3699 
] dogrey 
33 Setcolor
/absolu true def
32 Setcolor
[] 0 setdash
32 Setcolor
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
5 Thickness
[] 0 setdash
 (drawsegs) 4 [ 0]
[750 3795 1110 3795 
] dogrey 
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(From actual plant data) 1200 3824 0  0.00 [1200 3724 994 99] Show
%Latex:\myput{1200}{416}{5}{From actual plant data}
1 Setcolor
5 Thickness
[] 0 setdash
1 Setcolor
5 Thickness
[] 0 setdash
 (drawsegs) 4 [ 1]
[750 3954 1110 3954 
] dogrey 
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(TF  = 0.475/\(124.827*s^2+57.26*s+1\)) 1200 3983 0  0.00 [1200 3883 1672 99] Show
%Latex:\myput{1200}{257}{5}{TF  = 0.475/(124.827*s^2+57.26*s+1)}
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
%Latex:\end{picture}
 showpage

 end saved restore 

